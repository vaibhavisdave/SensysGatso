<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="org.apache.commons.logging.LogFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="java.nio.file.Path"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.nio.file.Files"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.data.TrafficEvent"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.awt.desktop.ScreenSleepEvent"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="java.util.concurrent.ExecutorService"/>
    <fullyQualifiedTypeName name="java.util.concurrent.Executor"/>
    <fullyQualifiedTypeName name="java.util.concurrent.Executors"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.TrafficEventProducer"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.SpeedEvent"/>
    <fullyQualifiedTypeName name="org.springframework.context.ApplicationEvent"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.data.Voilation"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.data.TrafficEventEntity"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.AbstractTrafficEvents"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="java.util.Random"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.data.Violation"/>
    <fullyQualifiedTypeName name="com.gatso.traffic.events.data.setup.TrafficEventDataSetup"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Conditional"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Configurable"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="io.micrometer.core.instrument.util.StringUtils"/>
    <fullyQualifiedTypeName name="freemarker.core.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.util.StringUtils"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
</qualifiedTypeNameHistroy>
